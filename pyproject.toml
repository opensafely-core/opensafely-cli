[tool.black]
extend-exclude = 'opensafely/_vendor/*'

[tool.vendoring]
destination = "opensafely/_vendor/"
requirements = "vendor.txt"
namespace = "opensafely._vendor"

# We don't use any patches, but this directory has to be defined (though it
# doesn't have to exist)
patches-dir = "patches"
# Other config values which have to be defined even though we don't use them
protected-files = []
typing-stubs = {}
preserve_metadata = true

# some packages don't ship their license in the package. ffs google.
[tool.vendoring.license.fallback-urls]
protobuf = "https://raw.githubusercontent.com/protocolbuffers/protobuf/main/LICENSE"
chardet = "https://raw.githubusercontent.com/chardet/chardet/main/LICENSE"

[tool.vendoring.transformations]
# Imports of the form `import X.Y` can't be rewritten automatically by the
# vendoring tool so we apply some basic replacements here
substitute = [
  # certifi refers to itself by string here so we need to fix that too
  { match='get_path\("certifi"', replace='get_path("opensafely._vendor.certifi"' },
  # The below import just pulls in some nasty backwards compatibility code that
  # we don't need. See:
  # https://github.com/psf/requests/blob/589c4547338b592b1fb77c65663d8aa6fbb7e38b/requests/packages.py
  { match='from \. import packages', replace='' },
  { match='jobrunner.executors.local:LocalDockerAPI', replace='opensafely._vendor.jobrunner.executors.local:LocalDockerAPI' },
  { match='jobrunner.executors.volumes:DockerVolumeAPI', replace='opensafely._vendor.jobrunner.executors.volumes:DockerVolumeAPI' },
  { match='jobrunner.models', replace='opensafely._vendor.jobrunner.models' },
  { match='wrapt._wrappers', replace='opensafely._vendor.wrapt._wrappers'},
  { match='pydantic.color', replace='opensafely._vendor.pydantic.color'},
  { match='pydantic.types', replace='opensafely._vendor.pydantic.types'},
  { match='opentelemetry.sdk.metrics', replace='opensafely._vendor.opentelemetry.sdk.metrics'},
  { match='opentelemetry.sdk.resources', replace='opensafely._vendor.opentelemetry.sdk.resources'},
  { match='urllib3.contrib.securetransport', replace='opensafely._vendor.urllib3.contrib.securetransport'},
  { match='urllib3.contrib.pyopenssl', replace='opensafely._vendor.urllib3.contrib.pyopenssl'},
]

drop = [
  # a couple of libraries create these and I don't think we need them
  "*-nspkg.pth",
  # Scripts we don't need
  "bin/",
]

[tool.vendoring.license.directories]
job-runner = "jobrunner"

[tool.coverage.run]
branch = true
dynamic_context = "test_function"
omit = [
  ".venv/*",
  "opensafely/_vendor/*",
]

[tool.coverage.report]
fail_under = 87
skip_covered = true
show_missing = true

[tool.coverage.html]
show_contexts = true

[tool.ruff]
line-length = 88
exclude = [
  ".direnv",
  ".git",
  ".github",
  ".ipynb_checkpoints",
  ".pytest_cache",
  ".venv",
  "__pycache__",
  "coverage",
  "doc",
  "docker",
  "htmlcov",
  "venv",
  "opensafely/_vendor",
  "build",
]
extend-select = [
  "A",  # flake8-builtins
  "I",  # isort
  "INP",  # flake8-no-pep420
  "ISC",  # flake8-implicit-str-concat
  "UP",  # pyupgrade
  "W",  # pycodestyle warning
]
extend-ignore = [
  "E501",
  "E731",
]
target-version = "py38"

[tool.ruff.isort]
lines-after-imports = 2

[tool.ruff.per-file-ignores]
"tests/*test*.py" = ["INP001"]
